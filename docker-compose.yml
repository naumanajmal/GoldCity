version: '3.8'

services:
 
  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: weather_backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DB_HOST: ${DB_HOST:-localhost}
      DB_PORT: ${DB_PORT:-3306}
      DB_USER: ${DB_USER:-weather_user}
      DB_PASSWORD: ${DB_PASSWORD:-your_password}
      DB_NAME: ${DB_NAME:-weather_monitoring}
      PORT: 3001
    networks:
      - weather_network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      start_period: 40s
      retries: 3

  # Data Ingestion Service (separate container)
  ingestion:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: weather_ingestion
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DB_HOST: ${DB_HOST:-localhost}
      DB_PORT: ${DB_PORT:-3306}
      DB_USER: ${DB_USER:-weather_user}
      DB_PASSWORD: ${DB_PASSWORD:-your_password}
      DB_NAME: ${DB_NAME:-weather_monitoring}
      WEATHER_API_URL: ${WEATHER_API_URL:-https://api.open-meteo.com/v1/forecast}
      WEATHER_API_KEY: ${WEATHER_API_KEY:-}
      INGESTION_INTERVAL_MINUTES: ${INGESTION_INTERVAL_MINUTES:-10}
      TRACKED_CITIES: ${TRACKED_CITIES:-London,Dubai,Tokyo}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - weather_network
    command: sh -c "sleep 15 && node dist/services/ingestionService.js"

networks:
  weather_network:
    driver: bridge
